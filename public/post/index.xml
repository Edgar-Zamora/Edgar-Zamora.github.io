<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Edgar Zamora</title>
    <link>/post/</link>
    <description>Recent content in Posts on Edgar Zamora</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 28 Dec 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using the {gt} package to visualize Bad Bunny</title>
      <link>/2020/12/28/using-gt-package-to-visualize-bad-bunny/</link>
      <pubDate>Mon, 28 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/12/28/using-gt-package-to-visualize-bad-bunny/</guid>
      <description>Bad Bunny :rabbit:  Retrieving the data :cd: To explore some of the features present in Bad Bunny’s music, I use the spotifyr package which is an R wrapper for pulling track audio features and other information from Spotify’s Web API. In order to access the Spotify Web API, it is required that you have a Spotify account (free subscription works) of which to connect a Spotify developer account.</description>
    </item>
    
    <item>
      <title>Exploring how EA Sports&#39; FIFA added to my preference in music using the spotifyr package in R</title>
      <link>/2020/05/20/how-fifa-added-to-my-musical-pallete/</link>
      <pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/05/20/how-fifa-added-to-my-musical-pallete/</guid>
      <description>Anyone who has played FIFA has experienced every type of emotion ranging from anger after loosing that ranked match or pure bliss from winning a game against your older cousin in stoppage time. Whatever emotion that FIFA may engender from you, we keep coming back year after year to enjoy a game that offers more than just football (soccer). Over the years my reason for coming back to FIFA has grown from just being mostly about the game itself (game modes, new players, etc.</description>
    </item>
    
    <item>
      <title>The Complete Theme Guide</title>
      <link>/2020/04/02/complete-theme-guide/</link>
      <pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/04/02/complete-theme-guide/</guid>
      <description>In creating visualizations, one aims not only to create a visualization that can convey the message behind the data but also to create a visualization that is appealing to the viewer. The theme function in ggplot allows for one to do so, but whenever I look at the reference page I sometimes become over whelmed by the number of components. For that reason, this post will focus on detailing non-data components of ones plot.</description>
    </item>
    
    <item>
      <title>Generating multiple ggplot plots using purrr</title>
      <link>/2020/02/20/generating-multipier-ggplot-using-purrr/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/02/20/generating-multipier-ggplot-using-purrr/</guid>
      <description>At my work we often create visualizations that look very similar but have slight differences when it comes to aesthetics, axis limits, labels, and other attributes. However, with most visualizations in R, they all mostly have a similar structure, which is a great benefit of using ggplot. What I would traditionally do is reuse code for one visualization for another simply by copying and pasting, but as is commonly emphasized in data science, one should avoid copying and pasting more than two lines of code.</description>
    </item>
    
  </channel>
</rss>